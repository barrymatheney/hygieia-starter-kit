# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0  
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
version: '3.4'
services:
  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    hostname: 'gitlab'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.local:8888'
        gitlab_rails['gitlab_shell_ssh_port'] = 22        
    ports:
      - '8888:8888'
      - '444:443'
      - '22:22'
    volumes:
      - './data/gitlab/config:/etc/gitlab'
      - './data/gitlab/logs:/var/log/gitlab'
      - './data/gitlab/data:/var/opt/gitlab'

  # ssh_host:
  #   build: ./ssh-host
  #   hostname: ssh_host
  #   container_name: ssh_host
  #   ports:
  #     - "22:22"      
  #   volumes:
  #     - ./data/maven_repo:/data/maven_repo
  sonarqube:
    image: sonarqube:8-community
    hostname: sonarqube
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - ./data/sonarqube:/opt/sonarqube/data
      - ./logs/sonarqube:/opt/sonarqube/logs
    # healthcheck:
    #   test: wget -qO- http://sonarqube:9999/api/system/status | grep -q '"status":"UP"'
    #   interval: 1m
    #   timeout: 10s
    #   retries: 3
    #   start_period: 5m
  # mongodb:
  #   image: mongo:3.6
  #   hostname: mongo
  #   container_name: mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ./data/mongodb:/data/db
  jenkins:
    build: ./jenkins
    hostname: jenkins
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./data/jenkins:/var/jenkins_home
      - ./logs/jenkins:/var/jenkins_home/logs
    # healthcheck:
    #   test: wget -qO- http://jenkins:8888/api/json?tree=mode | grep -q '"NORMAL"'
    #   interval: 1m
    #   timeout: 10s
    #   retries: 3
    #   start_period: 5m

  
